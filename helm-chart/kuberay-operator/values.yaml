# Default values for kuberay-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: kuberay/operator
  tag: v0.5.0
  pullPolicy: IfNotPresent

nameOverride: "kuberay-operator"
fullnameOverride: "kuberay-operator"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "kuberay-operator"

service:
  type: ClusterIP
  port: 8080

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do whelm to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    # Anecdotally, managing 500 Ray pods requires roughly 500MB memory.
    # Monitor memory usage and adjust as needed.
    memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 512Mi

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  failureThreshold: 5

readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  failureThreshold: 5

rbacEnable: true

batchScheduler:
  enabled: false

# Set up `securityContext` to improve Pod security.
# See https://github.com/ray-project/kuberay/blob/master/docs/guidance/pod-security.md for further guidance.
securityContext: {}

# When singleNamespaceInstall is true:
# - the chart can be installed by users with permissions to a single namespace only
#   (this excludes the CRDs which can only be installed at cluster-scope)
# - the KubeRay operator will only listen to the resource
#   events from the operator's namespace by default
singleNamespaceInstall: false

# kuberay operator will only watch the resource events from the "watchNamespace" namespace.
# this option has no effect if singleNamespaceInstall is true, because we assume there are no
# permissions outside of the current namespace
# watchNamespace: ray-user-namespace

# Environment variables
env: []
# - name: EXAMPLE_ENV
#   value: "1"
